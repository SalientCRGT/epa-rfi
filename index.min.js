var ngapp=angular.module("ngapp",["ngRoute","ngResource","ngAnimate"]);ngapp.config(["$routeProvider","$resourceProvider",function(e,r){function a(e,r,a){var t=angular.fromJson(e),n=t.data||{};return Object.getOwnPropertyNames(t).forEach(function(e){"data"!==e&&(n["$"+e]=t[e])}),n}function t(e,r,a){var t=angular.fromJson(e),n=t.data||[];return Object.getOwnPropertyNames(t).forEach(function(e){"data"!==e&&(n["$"+e]=t[e])}),n}function n(e){return Object.getOwnPropertyNames(e.data).forEach(function(r){"$"===r.substring(0,1)&&(e.resource[r]=e.data[r])}),e.resource}function o(e){return console.log("error interceptor status: "+e.status),e.resource}e.when("/search",{templateUrl:"ngapp/search/search.html",controller:"SearchCtrl"}).when("/",{templateUrl:"ngapp/developer/developer.html"}).otherwise({redirectTo:"/"}),r.defaults.actions={get:{method:"GET",params:{id:"@registryId"},transformResponse:a},query:{method:"GET",isArray:!0,transformResponse:t,interceptor:{response:n,responseError:o}}}}]),ngapp.factory("FacilityResource",["$resource",function(e){return e("/api/facilities/:id",{page:1,pageSize:50})}]),ngapp.controller("SearchCtrl",["$scope","$http","FacilityResource","$timeout","$location","$httpParamSerializerJQLike",function(e,r,a,t,n,o){function s(){var r={};for(var a in e.searchParameters){if(null===e.searchParameters[a]||""===e.searchParameters[a]){delete e.searchParameters[a];break}if("q"==a){var t=e.searchParameters[a];r[a]=t.replace(/\s+/g,"|");break}r[a]=e.searchParameters[a]}var n=angular.extend({},r,e.pager);return n}e.pager={pageSize:50},e.pages=[],e.search=function(r){0===r||r>e.pages[e.pages.length-1]||(e.pager.page=r||1,e.pages=[],e.facilities=a.query(s()),e.facilities.$promise.then(function(r){var a;if(r.$pages-e.pager.page<2)for(a=r.$pages;a>1&&e.pages.length<5;a--)e.pages.unshift(a);else for(a=Math.max(e.pager.page-2,1);a<=r.$pages&&e.pages.length<5;a++)e.pages.push(a)}))},e.search(),e.update=function(){r({method:"GET",url:"/api/files?type=FRS&subtype=VA"}).then(function(e){},function(e){})},e.toggleForm=function(){e.searchParameters={},$("form").collapse("toggle")},e.requestUrl=function(){return n.protocol()+"://"+n.host()+"/api/facilities?"+o(s())}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5nYXBwL25nYXBwLmpzIiwibmdhcHAvc2VhcmNoL3NlYXJjaC5qcyJdLCJuYW1lcyI6WyJuZ2FwcCIsImFuZ3VsYXIiLCJtb2R1bGUiLCJjb25maWciLCIkcm91dGVQcm92aWRlciIsIiRyZXNvdXJjZVByb3ZpZGVyIiwidHJhbnNmb3JtT25lIiwiZGF0YSIsImhlYWRlcnNHZXR0ZXIiLCJzdGF0dXMiLCJqc29uRGF0YSIsImZyb21Kc29uIiwicmVzdWx0IiwiT2JqZWN0IiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImZvckVhY2giLCJwcm9wZXJ0eU5hbWUiLCJ0cmFuc2Zvcm1BbGwiLCJyZXNwb25zZUludGVyY2VwdG9yIiwicmVzcG9uc2UiLCJzdWJzdHJpbmciLCJyZXNvdXJjZSIsInJlc3BvbnNlRXJyb3JJbnRlcmNlcHRvciIsImNvbnNvbGUiLCJsb2ciLCJ3aGVuIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwib3RoZXJ3aXNlIiwicmVkaXJlY3RUbyIsImRlZmF1bHRzIiwiYWN0aW9ucyIsImdldCIsIm1ldGhvZCIsInBhcmFtcyIsImlkIiwidHJhbnNmb3JtUmVzcG9uc2UiLCJxdWVyeSIsImlzQXJyYXkiLCJpbnRlcmNlcHRvciIsInJlc3BvbnNlRXJyb3IiLCJmYWN0b3J5IiwiJHJlc291cmNlIiwicGFnZSIsInBhZ2VTaXplIiwiJHNjb3BlIiwiJGh0dHAiLCJGYWNpbGl0eVJlc291cmNlIiwiJHRpbWVvdXQiLCIkbG9jYXRpb24iLCIkaHR0cFBhcmFtU2VyaWFsaXplckpRTGlrZSIsInNlYXJjaFBhcmFtcyIsImZvcm1hdHRlZFBhcmFtcyIsImkiLCJzZWFyY2hQYXJhbWV0ZXJzIiwic3RyIiwicmVwbGFjZSIsImV4dGVuZCIsInBhZ2VyIiwicGFnZXMiLCJzZWFyY2giLCJsZW5ndGgiLCJmYWNpbGl0aWVzIiwiJHByb21pc2UiLCJ0aGVuIiwiJHBhZ2VzIiwidW5zaGlmdCIsIk1hdGgiLCJtYXgiLCJwdXNoIiwidXBkYXRlIiwidXJs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LEVBQUFhLE1BQUFmLEtBQUEsRUFBQSxHQUFBQSxHQUFBcEMsRUFBQTBELFFBQUFwQixFQUFBYyxNQUFBRSxPQUFBLEVBQUFsQixJQUNBRSxFQUFBYyxNQUFBVSxLQUFBMUIsT0FLQUUsRUFBQWUsU0FFQWYsRUFBQXlCLE9BQUEsV0FDQXhCLEdBQ0FiLE9BQUEsTUFDQXNDLElBQUEsbUNBQ0FQLEtBQUEsU0FBQTdDLEtBR0EsU0FBQUEsT0FPQTBCLEVBQUEyQixXQUFBLFdBQ0EzQixFQUFBUyxvQkFDQW1CLEVBQUEsUUFBQUMsU0FBQSxXQUdBN0IsRUFBQThCLFdBQUEsV0FDQSxNQUFBMUIsR0FBQTJCLFdBQUEsTUFBQTNCLEVBQUE0QixPQUFBLG1CQUFBM0IsRUFBQUMiLCJmaWxlIjoiaW5kZXguYWxsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypnbG9iYWwgYW5ndWxhciovXG52YXIgbmdhcHAgPSBhbmd1bGFyLm1vZHVsZSgnbmdhcHAnLCBbJ25nUm91dGUnLCduZ1Jlc291cmNlJywnbmdBbmltYXRlJ10pO1xuXG5uZ2FwcC5jb25maWcoZnVuY3Rpb24oJHJvdXRlUHJvdmlkZXIsICRyZXNvdXJjZVByb3ZpZGVyKXtcblxuXHQkcm91dGVQcm92aWRlclxuXHRcdC53aGVuKCcvc2VhcmNoJywge1xuXHRcdFx0dGVtcGxhdGVVcmw6ICduZ2FwcC9zZWFyY2gvc2VhcmNoLmh0bWwnLFxuXHRcdFx0Y29udHJvbGxlcjogJ1NlYXJjaEN0cmwnXG5cdFx0fSlcblx0XHQud2hlbignLycsIHtcblx0XHRcdHRlbXBsYXRlVXJsOiAnbmdhcHAvZGV2ZWxvcGVyL2RldmVsb3Blci5odG1sJ1xuXHRcdH0pXG5cdFx0Lm90aGVyd2lzZSh7XG5cdFx0XHRyZWRpcmVjdFRvOiAnLydcblx0XHR9KTtcblx0XG5cdC8vIHJlZHVjZXMgcmVzcG9uc2UgZnJvbSB7Y29kZTpcIlwiLCBtc2c6XCJcIiwgZGF0YTp7fX0gdG8ganVzdCBkYXRhXG5cdGZ1bmN0aW9uIHRyYW5zZm9ybU9uZShkYXRhLCBoZWFkZXJzR2V0dGVyLCBzdGF0dXMpe1xuXHRcdHZhciBqc29uRGF0YSA9IGFuZ3VsYXIuZnJvbUpzb24oZGF0YSk7XG5cdFx0dmFyIHJlc3VsdCA9IGpzb25EYXRhLmRhdGEgfHwge307XG5cdFx0T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoanNvbkRhdGEpLmZvckVhY2goZnVuY3Rpb24ocHJvcGVydHlOYW1lKXtcblx0XHRcdGlmIChwcm9wZXJ0eU5hbWUgIT09ICdkYXRhJylcblx0XHRcdFx0cmVzdWx0WyckJyArIHByb3BlcnR5TmFtZV0gPSBqc29uRGF0YVtwcm9wZXJ0eU5hbWVdO1xuXHRcdH0pO1xuXHRcdHJldHVybiByZXN1bHQ7XG5cdH1cblxuXHQvLyByZWR1Y2VzIHJlc3BvbnNlIGZyb20ge2NvZGU6XCJcIiwgbXNnOlwiXCIsIGRhdGE6W119IHRvIGp1c3QgZGF0YVxuXHRmdW5jdGlvbiB0cmFuc2Zvcm1BbGwoZGF0YSwgaGVhZGVyc0dldHRlciwgc3RhdHVzKXtcblx0XHR2YXIganNvbkRhdGEgPSBhbmd1bGFyLmZyb21Kc29uKGRhdGEpO1xuXHRcdHZhciByZXN1bHQgPSBqc29uRGF0YS5kYXRhIHx8IFtdO1xuXHRcdE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGpzb25EYXRhKS5mb3JFYWNoKGZ1bmN0aW9uKHByb3BlcnR5TmFtZSl7XG5cdFx0XHRpZiAocHJvcGVydHlOYW1lICE9PSAnZGF0YScpXG5cdFx0XHRcdHJlc3VsdFsnJCcgKyBwcm9wZXJ0eU5hbWVdID0ganNvbkRhdGFbcHJvcGVydHlOYW1lXTtcblx0XHR9KTtcblx0XHRyZXR1cm4gcmVzdWx0O1xuXHR9XG5cdFxuXHRmdW5jdGlvbiByZXNwb25zZUludGVyY2VwdG9yKHJlc3BvbnNlKXtcblx0XHQvLyBtb3ZlIGFueSAkIGRhdGEgcHJvcGVydGllcyBvdmVyIHRvIHRoZSByZXNvdXJjZVxuXHRcdE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHJlc3BvbnNlLmRhdGEpLmZvckVhY2goZnVuY3Rpb24ocHJvcGVydHlOYW1lKXtcblx0XHRcdGlmIChwcm9wZXJ0eU5hbWUuc3Vic3RyaW5nKDAsMSkgPT09ICckJylcblx0XHRcdFx0cmVzcG9uc2UucmVzb3VyY2VbcHJvcGVydHlOYW1lXSA9IHJlc3BvbnNlLmRhdGFbcHJvcGVydHlOYW1lXTtcblx0XHR9KTtcblx0XHRyZXR1cm4gcmVzcG9uc2UucmVzb3VyY2U7XG5cdH1cblx0XG5cdGZ1bmN0aW9uIHJlc3BvbnNlRXJyb3JJbnRlcmNlcHRvcihyZXNwb25zZSl7XG5cdFx0Y29uc29sZS5sb2coXCJlcnJvciBpbnRlcmNlcHRvciBzdGF0dXM6IFwiICsgcmVzcG9uc2Uuc3RhdHVzKTtcblx0XHRcblx0XHRyZXR1cm4gcmVzcG9uc2UucmVzb3VyY2U7XG5cdH1cblxuXHQkcmVzb3VyY2VQcm92aWRlci5kZWZhdWx0cy5hY3Rpb25zID0ge1xuXHRcdGdldDoge1xuXHRcdFx0bWV0aG9kOiAnR0VUJyxcblx0XHRcdHBhcmFtczoge2lkOidAcmVnaXN0cnlJZCd9LFxuXHRcdFx0dHJhbnNmb3JtUmVzcG9uc2U6IHRyYW5zZm9ybU9uZVxuXHRcdH0sXG5cdFx0cXVlcnk6IHtcblx0XHRcdG1ldGhvZDogJ0dFVCcsXG5cdFx0XHRpc0FycmF5OiB0cnVlLFxuXHRcdFx0dHJhbnNmb3JtUmVzcG9uc2U6IHRyYW5zZm9ybUFsbCxcblx0XHRcdGludGVyY2VwdG9yOiB7XG5cdFx0XHRcdHJlc3BvbnNlOiByZXNwb25zZUludGVyY2VwdG9yLFxuXHRcdFx0XHRyZXNwb25zZUVycm9yOiByZXNwb25zZUVycm9ySW50ZXJjZXB0b3Jcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cbn0pO1xuXG5uZ2FwcC5mYWN0b3J5KCdGYWNpbGl0eVJlc291cmNlJyxmdW5jdGlvbigkcmVzb3VyY2Upe1xuXHRyZXR1cm4gJHJlc291cmNlKCcvYXBpL2ZhY2lsaXRpZXMvOmlkJyx7cGFnZTogMSwgcGFnZVNpemU6IDUwfSk7XG59KTsiLCIvKmdsb2JhbCBhbmd1bGFyLG5nYXBwKi9cbm5nYXBwLmNvbnRyb2xsZXIoJ1NlYXJjaEN0cmwnLCBmdW5jdGlvbigkc2NvcGUsICRodHRwLCBGYWNpbGl0eVJlc291cmNlLCAkdGltZW91dCwkbG9jYXRpb24sJGh0dHBQYXJhbVNlcmlhbGl6ZXJKUUxpa2Upe1xuICAgIFxuICAgICRzY29wZS5wYWdlciA9IHtcbiAgICAgICAgcGFnZVNpemU6IDUwXG4gICAgfTtcbiAgICAkc2NvcGUucGFnZXMgPSBbXTtcbiAgICBcbiAgICAvLyBidWlsZCBhIG5ldyBqc29uIG9iamVjdCBhcyB0aGUgcmVxdWVzdCBwYXJhbWV0ZXJzIGZyb20gdGhlIHNlYXJjaCBhbmQgcGFnZXJcbiAgICAvLyB0aGUgcmVzb3VyY2UgaGFzIGRlZmF1bHRzIHtwYWdlOiAxLCBwYWdlU2l6ZTogNTB9XG4gICAgZnVuY3Rpb24gc2VhcmNoUGFyYW1zKCl7XG5cbiAgICAgICAgdmFyIGZvcm1hdHRlZFBhcmFtcyA9IHt9O1xuICAgICAgICAvLyB0cmltIHVudXNlZCBhdHRyaWJ1dGVzIGZvciBjbGVhbmVyIHJlcXVlc3QgdXJsc1xuICAgICAgICBmb3IgKHZhciBpIGluICRzY29wZS5zZWFyY2hQYXJhbWV0ZXJzKSB7XG4gICAgICAgICAgICBpZiAoJHNjb3BlLnNlYXJjaFBhcmFtZXRlcnNbaV0gPT09IG51bGwgfHwgJHNjb3BlLnNlYXJjaFBhcmFtZXRlcnNbaV0gPT09ICcnKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlICRzY29wZS5zZWFyY2hQYXJhbWV0ZXJzW2ldO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfWVsc2UgaWYoaSA9PSBcInFcIil7XG4gICAgICAgICAgICAgICAgdmFyIHN0ciA9ICRzY29wZS5zZWFyY2hQYXJhbWV0ZXJzW2ldO1xuICAgICAgICAgICAgICAgIGZvcm1hdHRlZFBhcmFtc1tpXSA9IHN0ci5yZXBsYWNlKC9cXHMrL2csICd8Jyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3JtYXR0ZWRQYXJhbXNbaV0gPSAkc2NvcGUuc2VhcmNoUGFyYW1ldGVyc1tpXTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gdG9kbyA6IGFsdGVyIHEgdG8gcGFzcyBpbiByZWdleHAgc3ludGF4IHNpbWlsYXIgdG8gZ29vZ2xlLXN0eWxlIHNlYXJjaGluZ1xuICAgICAgICAvLyBodHRwczovL3N1cHBvcnQuZ29vZ2xlLmNvbS93ZWJzZWFyY2gvYW5zd2VyLzI0NjY0MzM/aGw9ZW5cbiAgICAgICAgLy8gZS5nLiBxdW90ZXMsIGFzdGVyaXNrLCBtaW51cywgbnVtYmVyIHJhbmdlXG5cbiAgICAgICAgdmFyIHBhcmFtcyA9IGFuZ3VsYXIuZXh0ZW5kKHt9LCBmb3JtYXR0ZWRQYXJhbXMsICRzY29wZS5wYWdlcik7XG4gICAgICAgIHJldHVybiBwYXJhbXM7XG4gICAgfVxuICAgIFxuICAgICRzY29wZS5zZWFyY2ggPSBmdW5jdGlvbihwYWdlKXtcbiAgICAgICAgaWYgKHBhZ2UgPT09IDAgfHwgcGFnZSA+ICRzY29wZS5wYWdlc1skc2NvcGUucGFnZXMubGVuZ3RoIC0gMV0pe1xuICAgICAgICAgICAgLy8gYmFkIHBhZ2UgcGFyYW1ldGVyXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICRzY29wZS5wYWdlci5wYWdlID0gcGFnZSB8fCAxO1xuICAgICAgICAkc2NvcGUucGFnZXMgPSBbXTtcbiAgICAgICAgXG4gICAgICAgICRzY29wZS5mYWNpbGl0aWVzID0gRmFjaWxpdHlSZXNvdXJjZS5xdWVyeShzZWFyY2hQYXJhbXMoKSk7XG5cbiAgICAgICAgLy8gbWFuYWdlIHRoZSBhcnJheSBvZiBwYWdlc1xuICAgICAgICAvLyB3ZSdsbCBsaW1pdCBpdCB0byA1IHdpdGggdGhlIGN1cnJlbnQgcGFnZSBpbiB0aGUgY2VudGVyXG4gICAgICAgICRzY29wZS5mYWNpbGl0aWVzLiRwcm9taXNlLnRoZW4oZnVuY3Rpb24oZGF0YSl7XG4gICAgICAgICAgICB2YXIgcGFnZTtcbiAgICAgICAgICAgIGlmIChkYXRhLiRwYWdlcyAtICRzY29wZS5wYWdlci5wYWdlIDwgMil7XG4gICAgICAgICAgICAgICAgLy8gaXQncyBjbG9zZSB0byB0aGUgZW5kLCBsb2FkIHRoZSBwYWdlcyBiYWNrd2FyZHNcbiAgICAgICAgICAgICAgICBmb3IocGFnZSA9IGRhdGEuJHBhZ2VzOyBwYWdlID4gMSAmJiAkc2NvcGUucGFnZXMubGVuZ3RoIDwgNTsgcGFnZS0tKVxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUucGFnZXMudW5zaGlmdChwYWdlKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gc3RhcnQgZnJvbSAxIG9yIGN1cnJlbnQgcGFnZSBtaW51cyAyICh3aGljaGV2ZXIgaXMgbGFyZ2VyKVxuICAgICAgICAgICAgICAgIGZvcihwYWdlID0gTWF0aC5tYXgoJHNjb3BlLnBhZ2VyLnBhZ2UgLSAyLDEpOyBwYWdlIDw9IGRhdGEuJHBhZ2VzICYmICRzY29wZS5wYWdlcy5sZW5ndGggPCA1OyBwYWdlKyspXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5wYWdlcy5wdXNoKHBhZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIFxuICAgICRzY29wZS5zZWFyY2goKTtcblxuICAgICRzY29wZS51cGRhdGUgPSBmdW5jdGlvbigpe1xuICAgICAgICRodHRwKHtcbiAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICAgIHVybDogJy9hcGkvZmlsZXM/dHlwZT1GUlMmc3VidHlwZT1WQSdcbiAgICAgICAgfSkudGhlbihmdW5jdGlvbiBzdWNjZXNzQ2FsbGJhY2socmVzcG9uc2UpIHtcbiAgICAgICAgICAgIC8vIHRoaXMgY2FsbGJhY2sgd2lsbCBiZSBjYWxsZWQgYXN5bmNocm9ub3VzbHlcbiAgICAgICAgICAgIC8vIHdoZW4gdGhlIHJlc3BvbnNlIGlzIGF2YWlsYWJsZVxuICAgICAgICAgIH0sIGZ1bmN0aW9uIGVycm9yQ2FsbGJhY2socmVzcG9uc2UpIHtcbiAgICAgICAgICAgIC8vIGNhbGxlZCBhc3luY2hyb25vdXNseSBpZiBhbiBlcnJvciBvY2N1cnNcbiAgICAgICAgICAgIC8vIG9yIHNlcnZlciByZXR1cm5zIHJlc3BvbnNlIHdpdGggYW4gZXJyb3Igc3RhdHVzLlxuICAgICAgICAgIH0pO1xuXG4gICAgfVxuXG5cdCRzY29wZS50b2dnbGVGb3JtID0gZnVuY3Rpb24oKXtcbiAgICAgICAgJHNjb3BlLnNlYXJjaFBhcmFtZXRlcnMgPSB7fTtcbiAgICAgICAgJCgnZm9ybScpLmNvbGxhcHNlKCd0b2dnbGUnKTtcblx0fTtcblx0XG5cdCRzY29wZS5yZXF1ZXN0VXJsID0gZnVuY3Rpb24oKXtcblx0ICAgIHJldHVybiAkbG9jYXRpb24ucHJvdG9jb2woKSArICc6Ly8nICsgJGxvY2F0aW9uLmhvc3QoKSArICcvYXBpL2ZhY2lsaXRpZXM/JyArICRodHRwUGFyYW1TZXJpYWxpemVySlFMaWtlKHNlYXJjaFBhcmFtcygpKTtcblx0fTtcbn0pOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
