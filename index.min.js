var ngapp=angular.module("ngapp",["ngRoute","ngResource","ngAnimate"]);ngapp.config(["$routeProvider","$resourceProvider",function(e,r){function a(e){var r=angular.fromJson(e),a=r.data||{};return a.$code=r.code,a.$msg=r.msg,a}function t(e){var r=angular.fromJson(e),a=r.data||[];return a.$code=r.code,a.$msg=r.msg,a}e.when("/",{templateUrl:"ngapp/splash/splash.html",controller:"SplashCtrl"}).otherwise({redirectTo:"/"}),r.defaults.actions={get:{method:"GET",params:{id:"@registryId"},transformResponse:a},query:{method:"GET",isArray:!0,transformResponse:t}}}]),ngapp.factory("FacilityResource",["$resource",function(e){return e("/api/facilities/:id")}]),ngapp.controller("SplashCtrl",["$scope","$http","FacilityResource",function(e,r,a){e.facilities=a.query(),e.getFacilities=function(){console.log(e.search),e.search.length>3&&(e.facilities=r.get("/api/facilities/search/"+e.search.split(" ").join("+")).then(function(r){e.facilities=e.transformAll(r.data),console.log("facilities: "+e.facilities)}))},e.transformAll=function(e){var r=angular.fromJson(e),a=r.data||[];return a.$code=r.code,a.$msg=r.msg,a}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5nYXBwL25nYXBwLmpzIiwibmdhcHAvc3BsYXNoL3NwbGFzaC5qcyJdLCJuYW1lcyI6WyJuZ2FwcCIsImFuZ3VsYXIiLCJtb2R1bGUiLCJjb25maWciLCIkcm91dGVQcm92aWRlciIsIiRyZXNvdXJjZVByb3ZpZGVyIiwidHJhbnNmb3JtT25lIiwiZGF0YSIsImpzb25EYXRhIiwiZnJvbUpzb24iLCJyZXN1bHQiLCIkY29kZSIsImNvZGUiLCIkbXNnIiwibXNnIiwidHJhbnNmb3JtQWxsIiwid2hlbiIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsIm90aGVyd2lzZSIsInJlZGlyZWN0VG8iLCJkZWZhdWx0cyIsImFjdGlvbnMiLCJnZXQiLCJtZXRob2QiLCJwYXJhbXMiLCJpZCIsInRyYW5zZm9ybVJlc3BvbnNlIiwicXVlcnkiLCJpc0FycmF5IiwiZmFjdG9yeSIsIiRyZXNvdXJjZSIsIiRzY29wZSIsIiRodHRwIiwiRmFjaWxpdHlSZXNvdXJjZSIsImZhY2lsaXRpZXMiLCJnZXRGYWNpbGl0aWVzIiwiY29uc29sZSIsImxvZyIsInNlYXJjaCIsImxlbmd0aCIsInNwbGl0Iiwiam9pbiIsInRoZW4iLCJyZXNwb25zZSJdLCJtYXBwaW5ncyI6IkFBQUEsR0FBQUEsT0FBQUMsUUFBQUMsT0FBQSxTQUFBLFVBQUEsYUFBQSxhQUVBRixPQUFBRyxRQUFBLGlCQUFBLG9CQUFBLFNBQUFDLEVBQUFDLEdBWUEsUUFBQUMsR0FBQUMsR0FDQSxHQUFBQyxHQUFBUCxRQUFBUSxTQUFBRixHQUNBRyxFQUFBRixFQUFBRCxRQUdBLE9BRkFHLEdBQUFDLE1BQUFILEVBQUFJLEtBQ0FGLEVBQUFHLEtBQUFMLEVBQUFNLElBQ0FKLEVBSUEsUUFBQUssR0FBQVIsR0FDQSxHQUFBQyxHQUFBUCxRQUFBUSxTQUFBRixHQUNBRyxFQUFBRixFQUFBRCxRQUdBLE9BRkFHLEdBQUFDLE1BQUFILEVBQUFJLEtBQ0FGLEVBQUFHLEtBQUFMLEVBQUFNLElBQ0FKLEVBeEJBTixFQUNBWSxLQUFBLEtBQ0FDLFlBQUEsMkJBQ0FDLFdBQUEsZUFFQUMsV0FDQUMsV0FBQSxNQXFCQWYsRUFBQWdCLFNBQUFDLFNBQ0FDLEtBQ0FDLE9BQUEsTUFDQUMsUUFBQUMsR0FBQSxlQUNBQyxrQkFBQXJCLEdBRUFzQixPQUNBSixPQUFBLE1BQ0FLLFNBQUEsRUFDQUYsa0JBQUFaLE9BTUFmLE1BQUE4QixRQUFBLG9CQUFBLFlBQUEsU0FBQUMsR0FDQSxNQUFBQSxHQUFBLDBCQy9DQS9CLE1BQUFrQixXQUFBLGNBQUEsU0FBQSxRQUFBLG1CQUFBLFNBQUFjLEVBQUFDLEVBQUFDLEdBQ0FGLEVBQUFHLFdBQUFELEVBQUFOLFFBQ0FJLEVBQUFJLGNBQUEsV0FDQUMsUUFBQUMsSUFBQU4sRUFBQU8sUUFDQVAsRUFBQU8sT0FBQUMsT0FBQSxJQUNBUixFQUFBRyxXQUFBRixFQUFBVixJQUFBLDBCQUFBUyxFQUFBTyxPQUFBRSxNQUFBLEtBQUFDLEtBQUEsTUFDQUMsS0FBQSxTQUFBQyxHQUNBWixFQUFBRyxXQUFBSCxFQUFBakIsYUFBQTZCLEVBQUFyQyxNQUNBOEIsUUFBQUMsSUFBQSxlQUFBTixFQUFBRyxnQkFLQUgsRUFBQWpCLGFBQUEsU0FBQVIsR0FDQSxHQUFBQyxHQUFBUCxRQUFBUSxTQUFBRixHQUNBRyxFQUFBRixFQUFBRCxRQUdBLE9BRkFHLEdBQUFDLE1BQUFILEVBQUFJLEtBQ0FGLEVBQUFHLEtBQUFMLEVBQUFNLElBQ0FKIiwiZmlsZSI6ImluZGV4LmFsbC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBuZ2FwcCA9IGFuZ3VsYXIubW9kdWxlKCduZ2FwcCcsIFsnbmdSb3V0ZScsJ25nUmVzb3VyY2UnLCduZ0FuaW1hdGUnXSk7XG5cbm5nYXBwLmNvbmZpZyhmdW5jdGlvbigkcm91dGVQcm92aWRlciwgJHJlc291cmNlUHJvdmlkZXIpe1xuXG5cdCRyb3V0ZVByb3ZpZGVyXG5cdFx0LndoZW4oJy8nLCB7XG5cdFx0XHR0ZW1wbGF0ZVVybDogJ25nYXBwL3NwbGFzaC9zcGxhc2guaHRtbCcsXG5cdFx0XHRjb250cm9sbGVyOiAnU3BsYXNoQ3RybCdcblx0XHR9KVxuXHRcdC5vdGhlcndpc2Uoe1xuXHRcdFx0cmVkaXJlY3RUbzogJy8nXG5cdFx0fSk7XG5cdFxuXHQvLyByZWR1Y2VzIHJlc3BvbnNlIGZyb20ge2NvZGU6XCJcIiwgbXNnOlwiXCIsIGRhdGE6e319IHRvIGp1c3QgZGF0YVxuXHRmdW5jdGlvbiB0cmFuc2Zvcm1PbmUoZGF0YSl7XG5cdFx0dmFyIGpzb25EYXRhID0gYW5ndWxhci5mcm9tSnNvbihkYXRhKTtcblx0XHR2YXIgcmVzdWx0ID0ganNvbkRhdGEuZGF0YSB8fCB7fTtcblx0XHRyZXN1bHQuJGNvZGUgPSBqc29uRGF0YS5jb2RlO1xuXHRcdHJlc3VsdC4kbXNnID0ganNvbkRhdGEubXNnO1xuXHRcdHJldHVybiByZXN1bHQ7XG5cdH1cblxuXHQvLyByZWR1Y2VzIHJlc3BvbnNlIGZyb20ge2NvZGU6XCJcIiwgbXNnOlwiXCIsIGRhdGE6W119IHRvIGp1c3QgZGF0YVxuXHRmdW5jdGlvbiB0cmFuc2Zvcm1BbGwoZGF0YSl7XG5cdFx0dmFyIGpzb25EYXRhID0gYW5ndWxhci5mcm9tSnNvbihkYXRhKTtcblx0XHR2YXIgcmVzdWx0ID0ganNvbkRhdGEuZGF0YSB8fCBbXTtcblx0XHRyZXN1bHQuJGNvZGUgPSBqc29uRGF0YS5jb2RlO1xuXHRcdHJlc3VsdC4kbXNnID0ganNvbkRhdGEubXNnO1xuXHRcdHJldHVybiByZXN1bHQ7XG5cdH1cblxuXHQkcmVzb3VyY2VQcm92aWRlci5kZWZhdWx0cy5hY3Rpb25zID0ge1xuXHRcdGdldDoge1xuXHRcdFx0bWV0aG9kOiAnR0VUJyxcblx0XHRcdHBhcmFtczoge2lkOidAcmVnaXN0cnlJZCd9LFxuXHRcdFx0dHJhbnNmb3JtUmVzcG9uc2U6IHRyYW5zZm9ybU9uZVxuXHRcdH0sXG5cdFx0cXVlcnk6IHtcblx0XHRcdG1ldGhvZDogJ0dFVCcsXG5cdFx0XHRpc0FycmF5OiB0cnVlLFxuXHRcdFx0dHJhbnNmb3JtUmVzcG9uc2U6IHRyYW5zZm9ybUFsbFxuXHRcdH1cblx0fTtcblxufSk7XG5cbm5nYXBwLmZhY3RvcnkoJ0ZhY2lsaXR5UmVzb3VyY2UnLGZ1bmN0aW9uKCRyZXNvdXJjZSl7XG5cdHJldHVybiAkcmVzb3VyY2UoJy9hcGkvZmFjaWxpdGllcy86aWQnKTtcbn0pOyIsIm5nYXBwLmNvbnRyb2xsZXIoJ1NwbGFzaEN0cmwnLCBmdW5jdGlvbigkc2NvcGUsICRodHRwLCBGYWNpbGl0eVJlc291cmNlKXtcbiAgICAkc2NvcGUuZmFjaWxpdGllcyA9IEZhY2lsaXR5UmVzb3VyY2UucXVlcnkoKTtcbiAgICAkc2NvcGUuZ2V0RmFjaWxpdGllcyA9IGZ1bmN0aW9uKCl7XG4gICAgXHRjb25zb2xlLmxvZygkc2NvcGUuc2VhcmNoKTtcbiAgICBcdGlmKCRzY29wZS5zZWFyY2gubGVuZ3RoID4gMyl7XG5cdCAgICBcdCRzY29wZS5mYWNpbGl0aWVzID0gJGh0dHAuZ2V0KCcvYXBpL2ZhY2lsaXRpZXMvc2VhcmNoLycgKyAkc2NvcGUuc2VhcmNoLnNwbGl0KCcgJykuam9pbignKycpKVxuXHQgICAgXHRcdC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG5cdCAgICBcdFx0XHQkc2NvcGUuZmFjaWxpdGllcyA9ICRzY29wZS50cmFuc2Zvcm1BbGwocmVzcG9uc2UuZGF0YSk7XG5cdCAgICBcdFx0XHRjb25zb2xlLmxvZygnZmFjaWxpdGllczogJyArICRzY29wZS5mYWNpbGl0aWVzKTtcblx0ICAgIFx0XHR9KTtcbiAgICBcdH1cbiAgICB9O1xuICAgIFxuICAgICRzY29wZS50cmFuc2Zvcm1BbGwgPSBmdW5jdGlvbihkYXRhKXtcblx0XHR2YXIganNvbkRhdGEgPSBhbmd1bGFyLmZyb21Kc29uKGRhdGEpO1xuXHRcdHZhciByZXN1bHQgPSBqc29uRGF0YS5kYXRhIHx8IFtdO1xuXHRcdHJlc3VsdC4kY29kZSA9IGpzb25EYXRhLmNvZGU7XG5cdFx0cmVzdWx0LiRtc2cgPSBqc29uRGF0YS5tc2c7XG5cdFx0cmV0dXJuIHJlc3VsdDtcblx0fTtcbn0pOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
